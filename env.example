# Diet Planner Application Environment Variables
# Copy this file to .env and fill in your actual values

# =============================================================================
# APPLICATION ENVIRONMENT
# =============================================================================
APP_ENV=development  # development, staging, production

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=diet_planner
POSTGRES_USER=diet_user
POSTGRES_PASSWORD=your_secure_database_password_here

# =============================================================================
# API KEYS & EXTERNAL SERVICES
# =============================================================================
# Google Gemini AI API Key (required)
# Get from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Flask Secret Key (change in production)
FLASK_SECRET_KEY=your_super_secure_secret_key_here

# JWT Secret Key (change in production)
JWT_SECRET_KEY=your_jwt_secret_key_here

# CORS Origins (comma-separated list)
CORS_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:3002

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================
# React App API URL
REACT_APP_API_URL=http://localhost:5001/api

# =============================================================================
# OPTIONAL SERVICES
# =============================================================================
# Redis URL for rate limiting (optional)
REDIS_URL=redis://localhost:6379

# Email configuration (for future features)
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=true
MAIL_USERNAME=your_email@gmail.com
MAIL_PASSWORD=your_email_password

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================
# Production URLs (for CI/CD)
PRODUCTION_API_URL=https://your-api-domain.com
STAGING_API_URL=https://staging-api-domain.com
NETLIFY_PRODUCTION_URL=https://your-app.netlify.app

# =============================================================================
# CI/CD SECRETS (Set in GitHub Repository Secrets)
# =============================================================================
# GitHub repository secrets (don't put actual values here):
# - RENDER_API_KEY: Your Render.com API key
# - RENDER_API_SERVICE_ID: Your Render API service ID
# - RENDER_API_STAGING_SERVICE_ID: Your Render staging service ID
# - NETLIFY_AUTH_TOKEN: Your Netlify authentication token
# - NETLIFY_SITE_ID: Your Netlify site ID
# - VERCEL_TOKEN: Your Vercel authentication token
# - VERCEL_ORG_ID: Your Vercel organization ID
# - VERCEL_PROJECT_ID: Your Vercel project ID
# - SLACK_WEBHOOK: Your Slack webhook URL for notifications

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 1. Never commit this file with real values to version control
# 2. Use strong, unique passwords and secret keys
# 3. Rotate secrets regularly in production
# 4. Consider using a secrets management service for production
# 5. Ensure .env is listed in .gitignore

# =============================================================================
# QUICK SETUP COMMANDS
# =============================================================================
# Generate secure keys using Python:
# python -c "import secrets; print('FLASK_SECRET_KEY=' + secrets.token_urlsafe(32))"
# python -c "import secrets; print('JWT_SECRET_KEY=' + secrets.token_urlsafe(32))"