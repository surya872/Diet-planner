# Development Docker Compose Configuration
# Brings up Postgres + API locally for development
version: '3.8'

services:
  # Development Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-diet_planner}
      POSTGRES_USER: ${POSTGRES_USER:-diet_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-diet_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-diet_user} -d ${POSTGRES_DB:-diet_planner}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Development API Service
  api:
    build:
      context: ../apps/api
      dockerfile: Dockerfile.dev
    environment:
      APP_ENV: development
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${POSTGRES_DB:-diet_planner}
      POSTGRES_USER: ${POSTGRES_USER:-diet_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-diet_password}
      POSTGRES_PORT: 5432
      FLASK_SECRET_KEY: ${FLASK_SECRET_KEY:-dev-secret-key}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-dev-jwt-secret}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      CORS_ORIGINS: "http://localhost:3000,http://localhost:3001,http://localhost:3002"
    ports:
      - "5001:5001"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ../apps/api:/app
      - api_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for Rate Limiting and Session Storage
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Development Database Admin (pgAdmin)
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dietplanner.dev
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    depends_on:
      - postgres
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  api_logs:
    driver: local
  pgadmin_data:
    driver: local

networks:
  default:
    driver: bridge
    name: diet-planner-dev
